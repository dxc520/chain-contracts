const bountyPledge = artifacts.require("BountyPledge");
contract('bountyPledge', (accounts) => {

  console.log("the bountyPledge accounts=", accounts);

  let from = accounts[0];//address(0x8fD86498ff1B750454f5187cc0B2bC6b51d0E07B);
  let to = accounts[1];
  let user2 = accounts[2];
  let _bountyPledgeInstance;

  const usd = '0xE097d6B3100777DC31B34dC2c58fB524C2e76921'; //mumbai 测试网的 usdc代币
  //const usd = '0x536274C4a091D502928ecE0397962c84D9d18b1b'; //SolarChain
  const usdk = "0x03b9408FE77cC0356ddF0dc4e6551703FEa82A1b"; //Polygon-mumbai usdk 代币

  let admin="0x8fd86498ff1b750454f5187cc0b2bc6b51d0e07b";
  const erc20Abi = [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "MintTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferDirectSolar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferFrom",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "grantMintRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasMintRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceMintRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "decimal",
          "type": "uint8"
        }
      ],
      "name": "setDecimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimal",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
    ];

  beforeEach(async function () {
    _bountyPledgeInstance = await bountyPledge.deployed();
  });

  it('get contract name', async () => {
    let _name = await _bountyPledgeInstance.name();
    console.log("_name= ", _name);
  });

  it('get contract symbol', async () => {
    let _symbol = await _bountyPledgeInstance.symbol();
    console.log("_symbol= ", _symbol);
  });

  it('pledge', async () => {
    console.log("pledge:...");
    let allowanceAmount = 1500000
    let transferAmountAvg = 500000
    //approve
    //todo 
    //let tx4 = await _usdtErc20Instance.increaseAllowance(_bountyPledgeInstance.address,allowanceAmount);
    //console.log("tx4.increaseAllowance=",tx4.tx);
    console.log("approve is begin....");

    var usdContract = new web3.eth.Contract(erc20Abi, usd, { from: admin });
  
    await usdContract.methods.approve(_bountyPledgeInstance.address,allowanceAmount).send({ from: admin })
      .on('transactionHash', function (hash) {
        console.log("hash=", hash);
      })
      .on('receipt', function (receipt) {
        console.log("receipt.blockHash=", receipt.blockHash,";receipt.transactionHash=",receipt.transactionHash);
      })
      /*.on('confirmation', function (confirmationNumber, receipt) {
        console.log("confirmationNumber=", confirmationNumber, ";receipt.transactionHash=", receipt.transactionHash,";receipt.blockHash=",receipt.blockHash);
      })
      */
      .on('error', function (error, receipt) {
        console.log("error=", error, ";receipt=", receipt);
      });


      console.log("approve is over....");

    //pledge
    let startTime = Math.floor(new Date().getTime() / 1000);
    let endTime = Math.floor(new Date('2023-1-26 19:45:23').getTime() / 1000);

    /*
        bountyReq ={
        startTime:startTime,
        endTime:endTime,
        owner:admin,
        bountyType:2,//1=single,2=multiple
        cid:"QM02dfdfierewr2354ler",
        amount:allowance,
        unit:2,//1=usdt,2=matic,
         
    };
    */
    let bountyReq = [startTime, endTime, 2, "QM02dfdfierewr2354ler", allowanceAmount, 1];

    let tx6 = await _bountyPledgeInstance.pledge(bountyReq);
    console.log("tx6.pledge=", tx6.tx);

    let currentIdx = (await _bountyPledgeInstance.getCurrentBountyIdx()).toNumber();
    console.log("currentIdx=", currentIdx);

    //分账
    let bountyId = currentIdx;
    let tx7 = await _bountyPledgeInstance.transfer(bountyId, to, transferAmountAvg, "QM:reply-" + to + "-1");
    console.log("tx7.transfer.1=", tx7.tx);
    tx7 = await _bountyPledgeInstance.transfer(bountyId, user2, transferAmountAvg, "QM:reply-" + user2 + "-1");
    console.log("tx7.transfer.2=", tx7.tx);

    let winners = await _bountyPledgeInstance.getWinners(bountyId);
    console.log("winners=", winners);

    //模拟过期，这个method 在正式部署的时候，将废弃
    let expiredTime = Math.floor(new Date().getTime() / 1000);
    let tx8 = await _bountyPledgeInstance.setBountyExpired(bountyId, expiredTime);
    console.log("tx8.setBountyExpired=", tx8.tx);

    let tx9 = await _bountyPledgeInstance.withdraw(bountyId);
    console.log("tx9.withdraw=", tx9.tx);

    let bountyStatus = await _bountyPledgeInstance.getBounty(bountyId);
    console.log("tx10.bountyStatus=", bountyStatus);


    console.log("change the ERC20 coin to USDK\n\n");
    let tx20 = await _bountyPledgeInstance.addSupporteAsset(usdk,"USDK");
    console.log("tx20.change.coin=", tx20.tx);


    var usdContract = new web3.eth.Contract(erc20Abi, usdk, { from: admin });
  
    await usdContract.methods.approve(_bountyPledgeInstance.address,allowanceAmount).send({ from: admin })
      .on('transactionHash', function (hash) {
        console.log("hash=", hash);
      })
      .on('receipt', function (receipt) {
        console.log("receipt.blockHash=", receipt.blockHash,";receipt.transactionHash=",receipt.transactionHash);
      })
      /*.on('confirmation', function (confirmationNumber, receipt) {
        console.log("confirmationNumber=", confirmationNumber, ";receipt.transactionHash=", receipt.transactionHash,";receipt.blockHash=",receipt.blockHash);
      })
      */
      .on('error', function (error, receipt) {
        console.log("error=", error, ";receipt=", receipt);
      });


      console.log("Usdk : approve is over....");

    //pledge
     startTime = Math.floor(new Date().getTime() / 1000);
     endTime = Math.floor(new Date('2023-1-26 19:45:23').getTime() / 1000);

    bountyReq = [startTime, endTime, 2, "QM02dfdfierewr2354ler", allowanceAmount, 1];

    tx6 = await _bountyPledgeInstance.pledge(bountyReq);
    console.log("tx26.pledge=", tx6.tx);

    currentIdx = (await _bountyPledgeInstance.getCurrentBountyIdx()).toNumber();
    console.log("currentIdx=", currentIdx);

    //分账
     bountyId = currentIdx;
     tx7 = await _bountyPledgeInstance.transfer(bountyId, to, transferAmountAvg, "QM:reply-" + to + "-1");
    console.log("tx27.transfer.1=", tx7.tx);
    tx7 = await _bountyPledgeInstance.transfer(bountyId, user2, transferAmountAvg, "QM:reply-" + user2 + "-1");
    console.log("tx27.transfer.2=", tx7.tx);

     winners = await _bountyPledgeInstance.getWinners(bountyId);
    console.log("winners=", winners);

    //模拟过期，这个method 在正式部署的时候，将废弃
     expiredTime = Math.floor(new Date().getTime() / 1000);
     tx8 = await _bountyPledgeInstance.setBountyExpired(bountyId, expiredTime);
    console.log("tx28.setBountyExpired=", tx8.tx);

     tx9 = await _bountyPledgeInstance.withdraw(bountyId);
    console.log("tx29.withdraw=", tx9.tx);

    bountyStatus = await _bountyPledgeInstance.getBounty(bountyId);
    console.log("tx29.0.bountyStatus=", bountyStatus);
























  });
  it('insufficient allowance', async () => {
    let allowanceAmount = 321000000
    let transferAmount = 301000000
    //approve
    //let tx4 = await _usdtErc20Instance.approve(_bountyPledgeInstance.address,allowanceAmount);
    //console.log("tx4.increaseAllowance=",tx4.tx);

    //pledge
    let startTime = Math.floor(new Date().getTime() / 1000);
    let endTime = Math.floor(new Date('2023-1-26 19:45:23').getTime() / 1000);
    let bountyReq = [startTime, endTime, 2, "QM02dfdfierewr2354ler", allowanceAmount, 1];

    //let tx6 = await _bountyPledgeInstance.pledge(bountyReq);
    //console.log("tx6.pledge=",tx6.tx);

    let currentIdx = (await _bountyPledgeInstance.getCurrentBountyIdx()).toNumber();
    console.log("currentIdx=", currentIdx);

  });

});